Catspeak has a small standard library which contains common constants and
functions that are considered necessary for all programs. If you have any
suggestions on what could be added to this standard library, please submit
them to the [GitHub](https://github.com/NuxiiGit/catspeak-lang/issues) page.

# Constants

Catspeak shares all the primitive constants of GML, these are:

 - `undefined`
 - `true`
 - `false`
 - `NaN`
 - `infinity`

However, instead of `pointer_null` Catspeak uses just `null`. This is in
order to maintain compatibility with JSON.

# Functions

Catspeak exposes the following GML functions for checking the types of
values and performing conversions:

 - `bool`        - `is_array`     - `is_nan`      - `is_undefined`
 - `string`      - `is_bool`      - `is_numeric`  - `is_vec3`
 - `real`        - `is_infinity`  - `is_ptr`      - `is_vec4`
 - `int64`       - `is_int32`     - `is_real`
 - `typeof`      - `is_int64`     - `is_string`
 - `instanceof`  - `is_method`    - `is_struct`

In addition to these functions, there are two Catspeak-specific functions:

 - `len` returns the number of items in a GML array.
 - `print` takes a variable number of values and prints them to the console
   window. Internally this behaves like `show_debug_message`.

# Operators

Catspeak shares many operators with GML, but there are some differences.
Listed below are the default operators defined by Catspeak, sorted by their
precedence. Earlier operators have a higher precedence. Operators grouped
together share the same precedence, e.g. `+` and `-`.

 - `.`
 - `%`
 - `*`, `/`, and `//` (integer division)
 - `+`, `-`, and `++` (string addition)
 - `==`, `!=`, `>`, `>=`, `<`, `<=`, `!`, `~`, `>>`, and `<<`
 - `&&` and `&`
 - `^^`, `^`, `||`, `|`

NOTE: All operators are left-associative in Catspeak.

Catspeak does not have `and`, `or`, `xor`, `mod` and `div` operators. You will
need to use `&&`, `||`, `^^`, `%`, and `//` instead.